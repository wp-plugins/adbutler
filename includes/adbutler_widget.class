<?php

if ( !defined( 'ABSPATH' ) ) exit;

/**
 * Class adbutler_widget. Widget used for configuring and displaying adbutler ad tags.
 */
class adbutler_widget extends WP_Widget
{
	/**
	 * Base constructor for the class
	 */
	function __construct()
	{
		parent::__construct('adbutler', 'AdButler Widget', array('description' => 'Displays AdButler Ad Tags'));
	}

	/**
	 * @param array $new_instance New saved widget state
	 * @param array $old_instance Pre-existing widget state
	 * @return array The processed widget state ready to be saved to the db
	 */
	function update($new_instance, $old_instance)
	{

		check_admin_referer('spark_permission_check', 'nonce_check');
		global $abinst;
		$instance = $old_instance;
		if(is_numeric($new_instance['zone']))
			$instance['zone'] = strip_tags($new_instance['zone']);
		
		switch ($new_instance['type'])
		{	
			case 'asyncjs':
			case 'js':
			case 'iframe':
			case 'if_html':
			case 'img':
			$instance['type'] = $new_instance['type'];
				break;
			default:
				break; 
		}		
		$instance['secure']= $new_instance['secure'];
		if(preg_match('^\d+x\d+$^',$new_instance['size']))
			$instance['size'] = $new_instance['size'];		
		$instance['name'] = sanitize_text_field($new_instance['name']);		
		switch ($new_instance['responsive'])
		{
			case 'FIXED':
			case 'AUTO':
			case 'INHERIT':			
				$instance['responsive'] = $new_instance['responsive'];
				break;
			default:
				break;
		}
		$instance['extra_data'] = sanitize_text_field($new_instance['extra_data']);
		
		
		$def = array(
			'adbutler_id' => get_option('adbutler_id'),
			'host_name' => get_option('adbutler_host_name'),
			'ssl_host_name' => get_option('adbutler_ssl_host_name'),

			'zone_id' => $instance['zone'],
			'type' => $instance['type'],
			'secure' => $instance['secure'],
			'extra_data' => $instance['extra_data'],

			'size' => $instance['size'],
			'name' => $instance['name'],
			'responsive' => $instance['responsive']
		);
		if (!$instance['zone'] == 0) {
			$instance['adtag'] = $abinst->build_ad_tag($def);
		}

		return $instance;
	}

	/**
	 * Our AdButler administration widget configuration form
	 * @param array $instance Widget state variables
	 * @return string|void
	 */
	function form($instance)
	{
		$zone = 0;
		$secure = 0;
		$type = 'js';
		$size_hidden = '0x0';
		$name_hidden = '';
		$responsive_hidden = 'FIXED';
		$extra_data = '';

		if ($instance) {

			$zone = esc_attr($instance['zone']);
			$secure = esc_attr($instance['secure']);
			$type = esc_attr($instance['type']);
			$size_hidden = esc_attr($instance['size']);
			$name_hidden = esc_attr($instance['name']);
			$responsive_hidden = esc_attr($instance['responsive']);
			$extra_data = esc_attr($instance['extra_data']);
		}
		$responsive_type_list = array(
			'asyncjs' => 'Asynchronous JavaScript (Recommended)',
			'js' => 'JavaScript',
			'iframe' => 'Iframe',
			'if_html' => 'Iframe (HTML Only)',
			'img' => 'Image (Basic)',
		);

		$fixed_type_list = array(
			'asyncjs' => 'Asynchronous JavaScript (Recommended)',
			'js' => 'JavaScript (Recommended)',
			'' => 'Iframe (Disabled)',
			'img' => 'Image (Basic)',
		);

		wp_nonce_field('spark_permission_check', 'nonce_check');
		?>
		<div class="adbutler_widget">
			<p title="Please select from one of the available zones to configure your advertisement placement " >
				<label 
				       for="<?php echo $this->get_field_id('zone'); ?>"><?php _e('Zone', 'spark_domain'); ?></label>
				<select class="adbutler_zone_select widefat" id="<?php echo $this->get_field_id('zone'); ?>"
						name="<?php echo $this->get_field_name('zone'); ?>"
						onchange="adbutler.handle_zone_select(this);"
						data-default-zone="<?php echo $zone ?>"
					>
					<option value="0">-- Select a zone --</option>
					<?php if ($zone) { ?>
						<option value="<?php echo $zone ?>"><?php echo $name_hidden ?> (<?php echo $size_hidden ?>)
						</option>
					<?php } ?>
				</select></p>

			<p title="Please select the type of advertisement tags you would like to generate...Javascript is Recommended"
			   class="adbutler_type_wrap adbutler_type_fixed">
				<label for="<?php echo $this->get_field_id('type_fixed'); ?>"><?php _e('Type', 'spark_domain'); ?></label>
				<select class="adbutler_type_select widefat"
						id="<?php echo $this->get_field_id('type_fixed'); ?>"
						name="<?php echo $this->get_field_name('type'); ?>"
					>
					<?php foreach ($responsive_type_list as $k => $v) {
						$selectedStr = $k === $type ? ' selected' : ''; ?>
						<option value="<?php echo $k ?>"<?php echo $selectedStr ?>><?php echo $v ?></option>
					<?php } ?>
				</select></p>

			<p title="Please select the type of advertisement tags you would like to generate...Javascript is Recommended"
			   class="adbutler_type_wrap adbutler_type_responsive" style="display:none;">
				<label
					for="<?php echo $this->get_field_id('type_responsive'); ?>"><?php _e('Type', 'spark_domain'); ?></label>
				<select class="adbutler_type_select widefat"
						id="<?php echo $this->get_field_id('type_responsive'); ?>"
						name="<?php echo $this->get_field_name('type'); ?>" disabled>
					<?php foreach ($fixed_type_list as $k => $v) {
						$selectedStr = $k === $type ? ' selected' : ''; ?>
						<option value="<?php echo $k ?>"<?php echo $selectedStr ?>><?php echo $v ?></option>
					<?php } ?>
				</select></p>

			<p class="adbutler-optional" title="Select Secure to enable SSL based Ad serving. Note this should only be chosen for secure sites">
				<input class="checkbox" type="checkbox" <?php checked($instance['secure'], 'on'); ?> id="<?php echo $this->get_field_id('secure'); ?>" name="<?php echo $this->get_field_name('secure'); ?>" />
				<label for="<?php echo $this->get_field_id('secure'); ?>"><?php _e('Secure', 'spark_domain'); ?></label>
			</p>
			</p>

			<p class="adbutler-optional"  title="Enter extra data to be passed along in your request. This requires configuration of your zones through AdButler">
				<label for="<?php echo $this->get_field_id('extra_data'); ?>"><?php _e('Extra Data', 'spark_domain'); ?></label>
				<input id="<?php echo $this->get_field_id('extra_data'); ?>" 
					   name="<?php echo $this->get_field_name('extra_data'); ?>" class="widefat" value="<?php echo $extra_data ?>"
					/></p>
			<?php if (isset($instance['adtag'])): ?>
				<div title="An ad has been properly configured for this widget.">Ad properly configured</div>
			<?php else: ?>
				<div><p title="Currently no ad has been properly configured for this widget and nothing will display">No ad configured</p></div>
			<?php endif; ?>

			<input class="size_hidden" id="<?php echo $this->get_field_id('size'); ?>" type="hidden"
				   name="<?php echo $this->get_field_name('size'); ?>" value="<?php echo $size_hidden ?>" readonly/>
			<input class="name_hidden" id="<?php echo $this->get_field_id('name'); ?>" type="hidden"
				   name="<?php echo $this->get_field_name('name'); ?>" value="<?php echo $name_hidden ?>" readonly/>
			<input class="responsive_hidden" id="<?php echo $this->get_field_id('responsive'); ?>" type="hidden"
				   name="<?php echo $this->get_field_name('responsive'); ?>" value="<?php echo $responsive_hidden ?>"
				   readonly/>
		</div>

		<?php if ($instance): ?>
		<script type="text/javascript">
			jQuery(function () {
				adbutler.update_all_lists();
			});
		</script>
	<?php endif;
	}

	/**
	 * Public Pacing widget --Ad tag if configured, otherwise nothing 
	 * @param array $args Core widget variables
	 * @param array $instance current state widget to display
	 */
	function widget($args, $instance)
	{
		extract($args);
		echo $before_widget;		
		if (array_key_exists('adtag', $instance)) echo $instance['adtag']; 
		echo $after_widget;
	}
}
	